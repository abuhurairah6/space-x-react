{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abu Salleh\\\\documents\\\\GitHub\\\\space-x-react\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"{\\n\\t\\t  \\t\\trockets {\\n\\t\\t\\t\\t    id\\n\\t\\t\\t\\t    name\\n\\t\\t\\t\\t    description\\n\\t  \\t\\t\\t}\\n\\t\\t\\t}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { ApolloProvider } from '@apollo/react-hooks'; // import withData from '../';\n\nimport App from 'next/app';\nimport '../node_modules/bulma/css/bulma.css';\nimport '../css/custom-styles.css';\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport fetch from 'node-fetch';\nimport gql from 'graphql-tag';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var cache = new InMemoryCache();\n      var link = new createHttpLink({\n        uri: 'https://api.spacex.land/graphql/',\n        fetch: fetch\n      });\n      var client = new ApolloClient({\n        cache: cache,\n        link: link\n      });\n      client.query({\n        query: gql(_templateObject())\n      }).then(function (result) {\n        return console.log(result);\n      });\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(ApolloProvider, {\n        client: client,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 4\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      })));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Abu Salleh/documents/GitHub/space-x-react/pages/_app.js"],"names":["ApolloProvider","App","ApolloClient","InMemoryCache","createHttpLink","fetch","gql","MyApp","cache","link","uri","client","query","then","result","console","log","props","Component","pageProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,qBAA/B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAO,qCAAP;AACA,OAAO,0BAAP;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;IAGMC,K;;;;;;;;;;;;;6BACI;AACR,UAAMC,KAAK,GAAG,IAAIL,aAAJ,EAAd;AACA,UAAMM,IAAI,GAAG,IAAIL,cAAJ,CAAmB;AAC9BM,QAAAA,GAAG,EAAE,kCADyB;AACWL,QAAAA,KAAK,EAAEA;AADlB,OAAnB,CAAb;AAIA,UAAMM,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BM,QAAAA,KAAK,EAALA,KAD8B;AAE9BC,QAAAA,IAAI,EAAJA;AAF8B,OAAjB,CAAf;AAKAE,MAAAA,MAAM,CAACC,KAAP,CAAa;AACTA,QAAAA,KAAK,EAAEN,GAAF;AADI,OAAb,EASGO,IATH,CASQ,UAAAC,MAAM;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,OATd;AAXQ,wBAsBuB,KAAKG,KAtB5B;AAAA,UAsBDC,SAtBC,eAsBDA,SAtBC;AAAA,UAsBUC,SAtBV,eAsBUA,SAtBV;AAuBR,aACC,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAER,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,SAAD,eAAeQ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD,CADD;AAKA;;;;EA7BkBlB,G;;AAgCpB,eAAeM,KAAf","sourcesContent":["import { ApolloProvider } from '@apollo/react-hooks';\r\n// import withData from '../';\r\nimport App from 'next/app';\r\nimport '../node_modules/bulma/css/bulma.css';\r\nimport '../css/custom-styles.css';\r\n\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport fetch from 'node-fetch';\r\nimport gql from 'graphql-tag';\r\n\r\n\r\nclass MyApp extends App {\r\n\trender() {\r\n\t\tconst cache = new InMemoryCache();\r\n\t\tconst link = new createHttpLink({\r\n\t\t  uri: 'https://api.spacex.land/graphql/', fetch: fetch\r\n\t\t});\r\n\r\n\t\tconst client = new ApolloClient({\r\n\t\t  cache,\r\n\t\t  link\r\n\t\t});\r\n\r\n\t\tclient.query({\r\n\t\t    query: gql`{\r\n\t\t  \t\trockets {\r\n\t\t\t\t    id\r\n\t\t\t\t    name\r\n\t\t\t\t    description\r\n\t  \t\t\t}\r\n\t\t\t}`\r\n\t\t  })\r\n\t\t  .then(result => console.log(result));\r\n\r\n\t\tconst {Component, pageProps} = this.props;\r\n\t\treturn (\r\n\t\t\t<ApolloProvider client={client}>\r\n\t\t\t\t<Component {...pageProps} />\r\n\t\t\t</ApolloProvider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}