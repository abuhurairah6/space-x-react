{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abu Salleh\\\\documents\\\\GitHub\\\\space-x-react\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"{\\n\\t    rates(currency: \\\"USD\\\") {\\n\\t      currency\\n\\t    }\\n\\t}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { ApolloProvider } from '@apollo/react-hooks'; // import withData from '../';\n\nimport App from 'next/app';\nimport '../node_modules/bulma/css/bulma.css';\nimport '../css/custom-styles.css';\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport fetch from 'node-fetch';\nimport gql from 'graphql-tag';\nvar cache = new InMemoryCache();\nvar link = new createHttpLink({\n  uri: 'https://48p1r2roz4.sse.codesandbox.io',\n  fetch: fetch\n});\nvar client = new ApolloClient({\n  cache: cache,\n  link: link\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(function (result) {\n  return console.log(result);\n});\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apollo = _this$props.apollo;\n      console.log(apollo);\n      return __jsx(ApolloProvider, {\n        client: apollo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 3\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 4\n        }\n      })));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Abu Salleh/documents/GitHub/space-x-react/pages/_app.js"],"names":["ApolloProvider","App","ApolloClient","InMemoryCache","createHttpLink","fetch","gql","cache","link","uri","client","query","then","result","console","log","MyApp","props","Component","pageProps","apollo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,qBAA/B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAO,qCAAP;AACA,OAAO,0BAAP;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,KAAK,GAAG,IAAIJ,aAAJ,EAAd;AACA,IAAMK,IAAI,GAAG,IAAIJ,cAAJ,CAAmB;AAC9BK,EAAAA,GAAG,EAAE,uCADyB;AACgBJ,EAAAA,KAAK,EAAEA;AADvB,CAAnB,CAAb;AAIA,IAAMK,MAAM,GAAG,IAAIR,YAAJ,CAAiB;AAC9BK,EAAAA,KAAK,EAALA,KAD8B;AAE9BC,EAAAA,IAAI,EAAJA;AAF8B,CAAjB,CAAf;AAKAE,MAAM,CAACC,KAAP,CAAa;AACTA,EAAAA,KAAK,EAAEL,GAAF;AADI,CAAb,EAOGM,IAPH,CAOQ,UAAAC,MAAM;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,CAPd;;IASMG,K;;;;;;;;;;;;;6BACI;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACDC,SADC,eACDA,SADC;AAAA,UACUC,SADV,eACUA,SADV;AAAA,UACqBC,MADrB,eACqBA,MADrB;AAERN,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACA,aACA,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD,CADA;AAKA;;;;EATkBlB,G;;AAYpB,eAAee,KAAf","sourcesContent":["import { ApolloProvider } from '@apollo/react-hooks';\r\n// import withData from '../';\r\nimport App from 'next/app';\r\nimport '../node_modules/bulma/css/bulma.css';\r\nimport '../css/custom-styles.css';\r\n\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport fetch from 'node-fetch';\r\nimport gql from 'graphql-tag';\r\n\r\nconst cache = new InMemoryCache();\r\nconst link = new createHttpLink({\r\n  uri: 'https://48p1r2roz4.sse.codesandbox.io', fetch: fetch\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link\r\n});\r\n\r\nclient.query({\r\n    query: gql`{\r\n\t    rates(currency: \"USD\") {\r\n\t      currency\r\n\t    }\r\n\t}`\r\n  })\r\n  .then(result => console.log(result));\r\n\r\nclass MyApp extends App {\r\n\trender() {\r\n\t\tconst {Component, pageProps, apollo} = this.props;\r\n\t\tconsole.log(apollo);\r\n\t\treturn (\r\n\t\t<ApolloProvider client={apollo}>\r\n\t\t\t<Component {...pageProps} />\r\n\t\t</ApolloProvider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}